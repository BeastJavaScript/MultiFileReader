// Generated by CoffeeScript 1.7.1
(function() {
  var MegaFile, TestCase, TestOpenFiles, TestResult, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  _ref = require("beast-test"), TestCase = _ref.TestCase, TestResult = _ref.TestResult;

  MegaFile = require("../bin/MegaFile").MegaFile;

  new (TestOpenFiles = (function(_super) {
    __extends(TestOpenFiles, _super);

    function TestOpenFiles() {
      TestOpenFiles.__super__.constructor.call(this);
    }

    TestOpenFiles.prototype.base = function() {
      var mf;
      mf = new MegaFile(["./address.txt", "./contact.txt"]);
      return mf;
    };

    TestOpenFiles.prototype.testFiles = function(mf) {
      this.assertEquals(mf.file(), "./address.txt");
      this.assertEquals(mf.getFile(), "./address.txt");
      return this.assertEquals(mf.file(), "./contact.txt");
    };

    TestOpenFiles.prototype.testFilesExistence = function(mf) {
      var line1, line2;
      this.assertTrue(mf.hasNextLine());
      line1 = mf.getNextLine();
      console.log(line1);
      mf.reset();
      this.assertTrue(mf.hasNextLine());
      line2 = mf.getNextLine();
      console.log(line2);
      this.assertEquals(line1, line2);
      this.assertTrue(mf.hasNextLine());
      console.log(mf.getNextLine());
      this.assertTrue(mf.hasNextLine());
      console.log(mf.getNextLine());
      this.assertTrue(mf.hasNextLine());
      console.log(mf.getNextLine());
      this.assertTrue(mf.hasNextLine());
      console.log(mf.getNextLine());
      this.assertTrue(mf.hasNextLine());
      console.log(mf.getNextLine());
      mf.reset();
      return this.assertTrue(mf.position === 0);
    };

    return TestOpenFiles;

  })(TestCase));

  console.log(TestCase.getResult());

}).call(this);
